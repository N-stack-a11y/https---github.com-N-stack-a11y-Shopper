{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\E-Commerce\\\\Frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\n/** import React, { createContext, useState, useEffect } from \"react\";\r\n\n\nexport const ShopContext = createContext(null);\r\n\nconst getDefaultCart = () => {\r\n   let cart = {};\r\n   for (let index = 0; index < 300+1; index++) {\r\n       cart[index] = 0;\r\n   }\r\n   return cart;\r\n};\r\n\nconst ShopContextProvider = (props) => {\r\n\n   const [all_product,setAll_Product] = useState([]);\r\n   const [CartItems, setCartItems] = useState(getDefaultCart());\r\n\n   useEffect(()=>{\r\n       fetch('http://localhost:3000/allproducts')\r\n       .then((response)=>response.json())\r\n       .then((data)=>setAll_Product(data))\r\n\n       if(localStorage.getItem('auth-token')){\r\n           fetch('http://localhost:3000/getcart',{\r\n               method:'POST',\r\n               headers:{\r\n                   Accept:'application/form-data',\r\n                   'auth-token':`${localStorage.getItem('auth-token')}`,\r\n                   'Content-Type':'application/json',\r\n               },\r\n               body:\"\",\r\n           }).then((response)=>response.json())\r\n           .then((data)=>setCartItems(data));\r\n       }\r\n   },[])\r\n   \r\n   const addToCart = (itemId) => {\r\n       setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n       if(localStorage.getItem('auth-token')){\r\n           fetch('http://localhost:3000/addtocart',{\r\n               method:'POST',\r\n               headers:{\r\n                   Accept:'application/form-data',\r\n                   'auth-token':`${localStorage.getItem('auth-token')}`,\r\n                   'Content-Type':'application/json',\r\n               },\r\n               body:JSON.stringify({\"itemId\":itemId}),\r\n           })\r\n           .then((response)=>response.json())\r\n           .then((data)=>console.log(data));\r\n       }\r\n   }\r\n   const removeFromCart = (itemId) => {\r\n       setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n       if(localStorage.getItem('auth-token')){\r\n           if(localStorage.getItem('auth-token')){\r\n               fetch('http://localhost:3000/removefromcart',{\r\n                   method:'POST',\r\n                   headers:{\r\n                       Accept:'application/form-data',\r\n                       'auth-token':`${localStorage.getItem('auth-token')}`,\r\n                       'Content-Type':'application/json',\r\n                   },\r\n                   body:JSON.stringify({\"itemId\":itemId}),\r\n               })\r\n               .then((response)=>response.json())\r\n               .then((data)=>console.log(data));\r\n           }\r\n       }\r\n   };\r\n\n   const getTotalCartAmount = () => {\r\n       let totalAmount = 0;\r\n       for (const item in CartItems) {\r\n           if (CartItems[item] > 0) {\r\n               let itemInfo = all_product.find((product) => product.id === Number(item));\r\n               if (itemInfo) {\r\n                   totalAmount += itemInfo.new_price * CartItems[item];\r\n               }\r\n           }\r\n       }\r\n       return totalAmount;\r\n   };\r\n\n   const getTotalCartItems = () => {\r\n       let totalItem = 0;\r\n       for (const item in CartItems) {\r\n           if (CartItems[item] > 0) {\r\n               totalItem += CartItems[item];\r\n           }\r\n       }\r\n       return totalItem;\r\n   };\r\n\n   useEffect(() => {\r\n       console.log(\"CartItems updated:\", CartItems);\r\n   }, [CartItems]);\r\n\n   const contextValue = {\r\n       getTotalCartItems,\r\n       getTotalCartAmount,\r\n       all_product: all_product || [],\r\n       CartItems: CartItems || {},\r\n       addToCart,\r\n       removeFromCart,\r\n   };\r\n\n   return (\r\n       <ShopContext.Provider value={contextValue}>\r\n           {props.children}\r\n       </ShopContext.Provider>\r\n   );\r\n};\r\n\nexport default ShopContextProvider;\r\n*/\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < 300 + 1; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]); // Product List\n  const [CartItems, setCartItems] = useState(getDefaultCart()); // Cart Items\n  const [loading, setLoading] = useState(true); // Loading State\n  const [error, setError] = useState(null); // Error State\n\n  // Fetch all products\n  useEffect(() => {\n    fetch(\"http://localhost:3000/allproducts\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch products\");\n      }\n      return response.json();\n    }).then(data => {\n      setAll_Product(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching products:\", error);\n      setError(\"Failed to load products. Please try again later.\");\n      setLoading(false);\n    });\n    const authToken = localStorage.getItem(\"auth-token\");\n    if (authToken) {\n      fetch(\"http://localhost:3000/getcart\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/form-data\",\n          \"auth-token\": authToken,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(data => setCartItems(data)).catch(error => console.error(\"Error fetching cart:\", error));\n    }\n  }, []);\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + 1\n    }));\n    const authToken = localStorage.getItem(\"auth-token\");\n    if (authToken) {\n      fetch(\"http://localhost:3000/addtocart\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/form-data\",\n          \"auth-token\": authToken,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error(\"Error adding to cart:\", error));\n    }\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n    const authToken = localStorage.getItem(\"auth-token\");\n    if (authToken) {\n      fetch(\"http://localhost:3000/removefromcart\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/form-data\",\n          \"auth-token\": authToken,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error(\"Error removing from cart:\", error));\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading products...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 16\n    }, this);\n  }\n  const contextValue = {\n    all_product,\n    CartItems,\n    addToCart,\n    removeFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 12\n  }, this);\n};\n_s(ShopContextProvider, \"novY9cgvxn2Ji6YhdFUOOEqefYc=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\n\n/** import React, { createContext, useState } from \"react\";\r\nimport all_product from \"../Components/Assets/all_product\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = ()=>{\r\n    let cart ={};\r\n    for (let index = 0; index < all_product.length+1; index++) {\r\n        cart[index] = 0;\r\n    }\r\n    return cart;\r\n}\r\n\r\nconst ShopContextProvider = (props) => {\r\n    const [CartItems,setCartItems] = useState(getDefaultCart());\r\n        const addToCart = (itemId) =>{\r\n        setCartItems((prev)=>({...prev,[itemId]:prev[itemId]+1})); \r\n        console.log(CartItems);\r\n    }\r\n\r\n    const removeFromCart = (itemId) =>{\r\n        setCartItems((prev)=>({...prev,[itemId]:prev[itemId]-1}))\r\n    }\r\n\r\n      const getTotalCartAmount = () => {\r\n        let totalAmount = 0;\r\n        for(const item in CartItems)\r\n        {\r\n            if(CartItems[item]>0)\r\n            {\r\n                let itemInfo = all_product.find((product)=>product.id===Number(item));\r\n                totalAmount += itemInfo.new_price * CartItems[item];\r\n            }\r\n           return totalAmount;\r\n        }\r\n    }\r\n        const getTotalCartItems = () =>{\r\n            let totalItem = 0;\r\n            for(const item in CartItems)\r\n            {\r\n                if(CartItems[item]>0)\r\n                {\r\n                    totalItem+= CartItems[item];\r\n                }\r\n            }\r\n        return totalItem;\r\n    } \r\n    const contextValue = {getTotalCartItems,getTotalCartAmount,all_product,CartItems,addToCart,removeFromCart};\r\n    \r\n    return(\r\n    <ShopContext.Provider value={contextValue}>\r\n    {props.children}\r\n    </ShopContext.Provider>\r\n)\r\n}\r\n\r\nexport default ShopContextProvider;  */\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","ShopContextProvider","props","_s","all_product","setAll_Product","CartItems","setCartItems","loading","setLoading","error","setError","fetch","then","response","ok","Error","json","data","catch","console","authToken","localStorage","getItem","method","headers","Accept","addToCart","itemId","prev","body","JSON","stringify","log","removeFromCart","children","fileName","_jsxFileName","lineNumber","columnNumber","contextValue","Provider","value","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/E-Commerce/Frontend/src/Context/ShopContext.jsx"],"sourcesContent":[" /** import React, { createContext, useState, useEffect } from \"react\";\r\n\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = () => {\r\n    let cart = {};\r\n    for (let index = 0; index < 300+1; index++) {\r\n        cart[index] = 0;\r\n    }\r\n    return cart;\r\n};\r\n\r\nconst ShopContextProvider = (props) => {\r\n\r\n    const [all_product,setAll_Product] = useState([]);\r\n    const [CartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n    useEffect(()=>{\r\n        fetch('http://localhost:3000/allproducts')\r\n        .then((response)=>response.json())\r\n        .then((data)=>setAll_Product(data))\r\n\r\n        if(localStorage.getItem('auth-token')){\r\n            fetch('http://localhost:3000/getcart',{\r\n                method:'POST',\r\n                headers:{\r\n                    Accept:'application/form-data',\r\n                    'auth-token':`${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type':'application/json',\r\n                },\r\n                body:\"\",\r\n            }).then((response)=>response.json())\r\n            .then((data)=>setCartItems(data));\r\n        }\r\n    },[])\r\n    \r\n    const addToCart = (itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n        if(localStorage.getItem('auth-token')){\r\n            fetch('http://localhost:3000/addtocart',{\r\n                method:'POST',\r\n                headers:{\r\n                    Accept:'application/form-data',\r\n                    'auth-token':`${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type':'application/json',\r\n                },\r\n                body:JSON.stringify({\"itemId\":itemId}),\r\n            })\r\n            .then((response)=>response.json())\r\n            .then((data)=>console.log(data));\r\n        }\r\n    }\r\n    const removeFromCart = (itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n        if(localStorage.getItem('auth-token')){\r\n            if(localStorage.getItem('auth-token')){\r\n                fetch('http://localhost:3000/removefromcart',{\r\n                    method:'POST',\r\n                    headers:{\r\n                        Accept:'application/form-data',\r\n                        'auth-token':`${localStorage.getItem('auth-token')}`,\r\n                        'Content-Type':'application/json',\r\n                    },\r\n                    body:JSON.stringify({\"itemId\":itemId}),\r\n                })\r\n                .then((response)=>response.json())\r\n                .then((data)=>console.log(data));\r\n            }\r\n        }\r\n    };\r\n\r\n    const getTotalCartAmount = () => {\r\n        let totalAmount = 0;\r\n        for (const item in CartItems) {\r\n            if (CartItems[item] > 0) {\r\n                let itemInfo = all_product.find((product) => product.id === Number(item));\r\n                if (itemInfo) {\r\n                    totalAmount += itemInfo.new_price * CartItems[item];\r\n                }\r\n            }\r\n        }\r\n        return totalAmount;\r\n    };\r\n\r\n    const getTotalCartItems = () => {\r\n        let totalItem = 0;\r\n        for (const item in CartItems) {\r\n            if (CartItems[item] > 0) {\r\n                totalItem += CartItems[item];\r\n            }\r\n        }\r\n        return totalItem;\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"CartItems updated:\", CartItems);\r\n    }, [CartItems]);\r\n\r\n    const contextValue = {\r\n        getTotalCartItems,\r\n        getTotalCartAmount,\r\n        all_product: all_product || [],\r\n        CartItems: CartItems || {},\r\n        addToCart,\r\n        removeFromCart,\r\n    };\r\n\r\n    return (\r\n        <ShopContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n*/\r\nimport React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = () => {\r\n    let cart = {};\r\n    for (let index = 0; index < 300 + 1; index++) {\r\n        cart[index] = 0;\r\n    }\r\n    return cart;\r\n};\r\n\r\nconst ShopContextProvider = (props) => {\r\n    const [all_product, setAll_Product] = useState([]); // Product List\r\n    const [CartItems, setCartItems] = useState(getDefaultCart()); // Cart Items\r\n    const [loading, setLoading] = useState(true); // Loading State\r\n    const [error, setError] = useState(null); // Error State\r\n\r\n    // Fetch all products\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:3000/allproducts\")\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error(\"Failed to fetch products\");\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setAll_Product(data);\r\n                setLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error fetching products:\", error);\r\n                setError(\"Failed to load products. Please try again later.\");\r\n                setLoading(false);\r\n            });\r\n\r\n        const authToken = localStorage.getItem(\"auth-token\");\r\n        if (authToken) {\r\n            fetch(\"http://localhost:3000/getcart\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/form-data\",\r\n                    \"auth-token\": authToken,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => setCartItems(data))\r\n                .catch((error) => console.error(\"Error fetching cart:\", error));\r\n        }\r\n    }, []);\r\n\r\n    const addToCart = (itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n\r\n        const authToken = localStorage.getItem(\"auth-token\");\r\n        if (authToken) {\r\n            fetch(\"http://localhost:3000/addtocart\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/form-data\",\r\n                    \"auth-token\": authToken,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ itemId }),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => console.log(data))\r\n                .catch((error) => console.error(\"Error adding to cart:\", error));\r\n        }\r\n    };\r\n\r\n    const removeFromCart = (itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n\r\n        const authToken = localStorage.getItem(\"auth-token\");\r\n        if (authToken) {\r\n            fetch(\"http://localhost:3000/removefromcart\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/form-data\",\r\n                    \"auth-token\": authToken,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ itemId }),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => console.log(data))\r\n                .catch((error) => console.error(\"Error removing from cart:\", error));\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading products...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    const contextValue = {\r\n        all_product,\r\n        CartItems,\r\n        addToCart,\r\n        removeFromCart,\r\n    };\r\n\r\n    return <ShopContext.Provider value={contextValue}>{props.children}</ShopContext.Provider>;\r\n};\r\n\r\nexport default ShopContextProvider;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** import React, { createContext, useState } from \"react\";\r\nimport all_product from \"../Components/Assets/all_product\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = ()=>{\r\n    let cart ={};\r\n    for (let index = 0; index < all_product.length+1; index++) {\r\n        cart[index] = 0;\r\n    }\r\n    return cart;\r\n}\r\n\r\nconst ShopContextProvider = (props) => {\r\n    const [CartItems,setCartItems] = useState(getDefaultCart());\r\n        const addToCart = (itemId) =>{\r\n        setCartItems((prev)=>({...prev,[itemId]:prev[itemId]+1})); \r\n        console.log(CartItems);\r\n    }\r\n\r\n    const removeFromCart = (itemId) =>{\r\n        setCartItems((prev)=>({...prev,[itemId]:prev[itemId]-1}))\r\n    }\r\n\r\n      const getTotalCartAmount = () => {\r\n        let totalAmount = 0;\r\n        for(const item in CartItems)\r\n        {\r\n            if(CartItems[item]>0)\r\n            {\r\n                let itemInfo = all_product.find((product)=>product.id===Number(item));\r\n                totalAmount += itemInfo.new_price * CartItems[item];\r\n            }\r\n           return totalAmount;\r\n        }\r\n    }\r\n        const getTotalCartItems = () =>{\r\n            let totalItem = 0;\r\n            for(const item in CartItems)\r\n            {\r\n                if(CartItems[item]>0)\r\n                {\r\n                    totalItem+= CartItems[item];\r\n                }\r\n            }\r\n        return totalItem;\r\n    } \r\n    const contextValue = {getTotalCartItems,getTotalCartAmount,all_product,CartItems,addToCart,removeFromCart};\r\n    \r\n    return(\r\n    <ShopContext.Provider value={contextValue}>\r\n    {props.children}\r\n    </ShopContext.Provider>\r\n)\r\n}\r\n\r\nexport default ShopContextProvider;  */"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}