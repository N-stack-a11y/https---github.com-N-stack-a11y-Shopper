{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\E-Commerce React\\\\Frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < 300 + 1; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]);\n  const [CartItems, setCartItems] = useState(getDefaultCart());\n  useEffect(() => {\n    fetch('http://localhost:3000/allproducts').then(response => response.json()).then(data => setAll_Product(data));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:3000/getcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: \"\"\n      }).then(response => response.json()).then(data => setCartItems(data));\n    }\n  }, []);\n\n  /** \r\n      const addToCart = (itemId) => {\r\n          setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n          if(localStorage.getItem('auth-token')){\r\n              fetch('http:localhost:3000/addtocart',{\r\n                  method:'POST',\r\n                  headers:{\r\n                      Accept:'application/form-data',\r\n                      'auth-token':`${localStorage.getItem('auth-token')}`,\r\n                      'Content-Type':'application/json',\r\n                  },\r\n                  body:JSON.stringify({\"itemId\":itemId}),\r\n              })\r\n              .then((response)=>response.json())\r\n              .then((data)=>console.log(data));\r\n          }\r\n      } */\n  const addToCart = itemId => {\n    // Update local state for cart\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: (prev[itemId] || 0) + 1\n    }));\n\n    // Check if auth-token exists in localStorage\n    const authToken = localStorage.getItem('auth-token');\n    if (authToken) {\n      // Correct the URL and headers\n      fetch('http://localhost:3001/addtocart', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          // Ensure proper JSON content type\n          'auth-token': authToken // Use token from localStorage\n        },\n        body: JSON.stringify({\n          itemId\n        }) // Send itemId as JSON\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      }).then(data => {\n        console.log(\"Cart updated successfully:\", data);\n      }).catch(error => {\n        console.error(\"Error adding item to cart:\", error);\n      });\n    } else {\n      console.warn(\"No auth token found. User not authenticated.\");\n      // Optionally, notify the user or redirect to login\n    }\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n    if (localStorage.getItem('auth-token')) {\n      if (localStorage.getItem('auth-token')) {\n        fetch('http:localhost:3000/removefromcart', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/form-data',\n            'auth-token': `${localStorage.getItem('auth-token')}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"itemId\": itemId\n          })\n        }).then(response => response.json()).then(data => console.log(data));\n      }\n    }\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in CartItems) {\n      if (CartItems[item] > 0) {\n        let itemInfo = all_product.find(product => product.id === Number(item));\n        if (itemInfo) {\n          totalAmount += itemInfo.new_price * CartItems[item];\n        }\n      }\n    }\n    return totalAmount;\n  };\n  const getTotalCartItems = () => {\n    let totalItem = 0;\n    for (const item in CartItems) {\n      if (CartItems[item] > 0) {\n        totalItem += CartItems[item];\n      }\n    }\n    return totalItem;\n  };\n  useEffect(() => {\n    console.log(\"CartItems updated:\", CartItems);\n  }, [CartItems]);\n  const contextValue = {\n    getTotalCartItems,\n    getTotalCartAmount,\n    all_product: all_product || [],\n    CartItems: CartItems || {},\n    addToCart,\n    removeFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopContextProvider, \"z3xs8E8TcA3D1ZGSGz/uuhcOa9Q=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\n\n/** import React, { createContext, useState } from \"react\";\r\nimport all_product from \"../Components/Assets/all_product\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = ()=>{\r\n    let cart ={};\r\n    for (let index = 0; index < all_product.length+1; index++) {\r\n        cart[index] = 0;\r\n    }\r\n    return cart;\r\n}\r\n\r\nconst ShopContextProvider = (props) => {\r\n    const [CartItems,setCartItems] = useState(getDefaultCart());\r\n        const addToCart = (itemId) =>{\r\n        setCartItems((prev)=>({...prev,[itemId]:prev[itemId]+1})); \r\n        console.log(CartItems);\r\n    }\r\n\r\n    const removeFromCart = (itemId) =>{\r\n        setCartItems((prev)=>({...prev,[itemId]:prev[itemId]-1}))\r\n    }\r\n\r\n      const getTotalCartAmount = () => {\r\n        let totalAmount = 0;\r\n        for(const item in CartItems)\r\n        {\r\n            if(CartItems[item]>0)\r\n            {\r\n                let itemInfo = all_product.find((product)=>product.id===Number(item));\r\n                totalAmount += itemInfo.new_price * CartItems[item];\r\n            }\r\n           return totalAmount;\r\n        }\r\n    }\r\n        const getTotalCartItems = () =>{\r\n            let totalItem = 0;\r\n            for(const item in CartItems)\r\n            {\r\n                if(CartItems[item]>0)\r\n                {\r\n                    totalItem+= CartItems[item];\r\n                }\r\n            }\r\n        return totalItem;\r\n    } \r\n    const contextValue = {getTotalCartItems,getTotalCartAmount,all_product,CartItems,addToCart,removeFromCart};\r\n    \r\n    return(\r\n    <ShopContext.Provider value={contextValue}>\r\n    {props.children}\r\n    </ShopContext.Provider>\r\n)\r\n}\r\n\r\nexport default ShopContextProvider;  */\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","ShopContextProvider","props","_s","all_product","setAll_Product","CartItems","setCartItems","fetch","then","response","json","data","localStorage","getItem","method","headers","Accept","body","addToCart","itemId","prev","authToken","JSON","stringify","ok","Error","status","console","log","catch","error","warn","removeFromCart","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","new_price","getTotalCartItems","totalItem","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/E-Commerce React/Frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = () => {\r\n    let cart = {};\r\n    for (let index = 0; index < 300+1; index++) {\r\n        cart[index] = 0;\r\n    }\r\n    return cart;\r\n};\r\n\r\nconst ShopContextProvider = (props) => {\r\n\r\n    const [all_product,setAll_Product] = useState([]);\r\n    const [CartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n    useEffect(()=>{\r\n        fetch('http://localhost:3000/allproducts')\r\n        .then((response)=>response.json())\r\n        .then((data)=>setAll_Product(data))\r\n\r\n        if(localStorage.getItem('auth-token')){\r\n            fetch('http://localhost:3000/getcart',{\r\n                method:'POST',\r\n                headers:{\r\n                    Accept:'application/form-data',\r\n                    'auth-token':`${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type':'application/json',\r\n                },\r\n                body:\"\",\r\n            }).then((response)=>response.json())\r\n            .then((data)=>setCartItems(data));\r\n        }\r\n    },[])\r\n    \r\n/** \r\n    const addToCart = (itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n        if(localStorage.getItem('auth-token')){\r\n            fetch('http:localhost:3000/addtocart',{\r\n                method:'POST',\r\n                headers:{\r\n                    Accept:'application/form-data',\r\n                    'auth-token':`${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type':'application/json',\r\n                },\r\n                body:JSON.stringify({\"itemId\":itemId}),\r\n            })\r\n            .then((response)=>response.json())\r\n            .then((data)=>console.log(data));\r\n        }\r\n    } */\r\n        const addToCart = (itemId) => {\r\n            // Update local state for cart\r\n            setCartItems((prev) => ({ ...prev, [itemId]: (prev[itemId] || 0) + 1 }));\r\n        \r\n            // Check if auth-token exists in localStorage\r\n            const authToken = localStorage.getItem('auth-token');\r\n            if (authToken) {\r\n                // Correct the URL and headers\r\n                fetch('http://localhost:3001/addtocart', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json', // Ensure proper JSON content type\r\n                        'auth-token': authToken,           // Use token from localStorage\r\n                    },\r\n                    body: JSON.stringify({ itemId }),     // Send itemId as JSON\r\n                })\r\n                    .then((response) => {\r\n                        if (!response.ok) {\r\n                            throw new Error(`HTTP error! Status: ${response.status}`);\r\n                        }\r\n                        return response.json();\r\n                    })\r\n                    .then((data) => {\r\n                        console.log(\"Cart updated successfully:\", data);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"Error adding item to cart:\", error);\r\n                    });\r\n            } else {\r\n                console.warn(\"No auth token found. User not authenticated.\");\r\n                // Optionally, notify the user or redirect to login\r\n            }\r\n        };\r\n        \r\n\r\n    const removeFromCart = (itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n        if(localStorage.getItem('auth-token')){\r\n            if(localStorage.getItem('auth-token')){\r\n                fetch('http:localhost:3000/removefromcart',{\r\n                    method:'POST',\r\n                    headers:{\r\n                        Accept:'application/form-data',\r\n                        'auth-token':`${localStorage.getItem('auth-token')}`,\r\n                        'Content-Type':'application/json',\r\n                    },\r\n                    body:JSON.stringify({\"itemId\":itemId}),\r\n                })\r\n                .then((response)=>response.json())\r\n                .then((data)=>console.log(data));\r\n            }\r\n        }\r\n    };\r\n\r\n    const getTotalCartAmount = () => {\r\n        let totalAmount = 0;\r\n        for (const item in CartItems) {\r\n            if (CartItems[item] > 0) {\r\n                let itemInfo = all_product.find((product) => product.id === Number(item));\r\n                if (itemInfo) {\r\n                    totalAmount += itemInfo.new_price * CartItems[item];\r\n                }\r\n            }\r\n        }\r\n        return totalAmount;\r\n    };\r\n\r\n    const getTotalCartItems = () => {\r\n        let totalItem = 0;\r\n        for (const item in CartItems) {\r\n            if (CartItems[item] > 0) {\r\n                totalItem += CartItems[item];\r\n            }\r\n        }\r\n        return totalItem;\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"CartItems updated:\", CartItems);\r\n    }, [CartItems]);\r\n\r\n    const contextValue = {\r\n        getTotalCartItems,\r\n        getTotalCartAmount,\r\n        all_product: all_product || [],\r\n        CartItems: CartItems || {},\r\n        addToCart,\r\n        removeFromCart,\r\n    };\r\n\r\n    return (\r\n        <ShopContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** import React, { createContext, useState } from \"react\";\r\nimport all_product from \"../Components/Assets/all_product\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = ()=>{\r\n    let cart ={};\r\n    for (let index = 0; index < all_product.length+1; index++) {\r\n        cart[index] = 0;\r\n    }\r\n    return cart;\r\n}\r\n\r\nconst ShopContextProvider = (props) => {\r\n    const [CartItems,setCartItems] = useState(getDefaultCart());\r\n        const addToCart = (itemId) =>{\r\n        setCartItems((prev)=>({...prev,[itemId]:prev[itemId]+1})); \r\n        console.log(CartItems);\r\n    }\r\n\r\n    const removeFromCart = (itemId) =>{\r\n        setCartItems((prev)=>({...prev,[itemId]:prev[itemId]-1}))\r\n    }\r\n\r\n      const getTotalCartAmount = () => {\r\n        let totalAmount = 0;\r\n        for(const item in CartItems)\r\n        {\r\n            if(CartItems[item]>0)\r\n            {\r\n                let itemInfo = all_product.find((product)=>product.id===Number(item));\r\n                totalAmount += itemInfo.new_price * CartItems[item];\r\n            }\r\n           return totalAmount;\r\n        }\r\n    }\r\n        const getTotalCartItems = () =>{\r\n            let totalItem = 0;\r\n            for(const item in CartItems)\r\n            {\r\n                if(CartItems[item]>0)\r\n                {\r\n                    totalItem+= CartItems[item];\r\n                }\r\n            }\r\n        return totalItem;\r\n    } \r\n    const contextValue = {getTotalCartItems,getTotalCartAmount,all_product,CartItems,addToCart,removeFromCart};\r\n    \r\n    return(\r\n    <ShopContext.Provider value={contextValue}>\r\n    {props.children}\r\n    </ShopContext.Provider>\r\n)\r\n}\r\n\r\nexport default ShopContextProvider;  */"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}